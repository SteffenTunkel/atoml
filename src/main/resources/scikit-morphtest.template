    @timeout(300)
    def test_<<<NAME>>>_<<<DATASET>>>(self):
        for iter in range(1,<<<ITERATIONS>>>+1):
            data_original, meta_original = loadarff('morphdata/<<<DATASET>>>_%i.arff' % iter)
            data_morphed, meta_morphed = loadarff('morphdata/<<<DATASET>>>_%i_<<<NAME>>>.arff' % iter)
            lb_make = LabelEncoder()
            
            data_original_df = pd.DataFrame(data_original)
            data_original_df["classAtt"] = lb_make.fit_transform(data_original_df["classAtt"])
            data_original_df = pd.get_dummies(data_original_df)
            
            data_morph_df = pd.DataFrame(data_morphed)
            data_morph_df["classAtt"] = lb_make.fit_transform(data_morph_df["classAtt"])
            data_morph_df = pd.get_dummies(data_morph_df)
            
            class_index_original = -1
            for i, s in enumerate(data_original_df.columns):
                if 'classAtt' in s:
                    class_index_original = i
            class_index_morph = -1
            for i, s in enumerate(data_morph_df.columns):
                if 'classAtt' in s:
                    class_index_morph = i
            
            classifier_original = <<<CLASSIFIER>>>
            np.random.seed(42)
            classifier_original.fit(np.delete(data_original_df.values, class_index_original, axis=1),data_original_df.values[:,class_index_original])
            classifier_morph = <<<CLASSIFIER>>>
            np.random.seed(42)
            classifier_morph.fit(np.delete(data_morph_df.values, class_index_morph, axis=1),data_morph_df.values[:,class_index_morph])
            prediction_original = classifier_original.predict(np.delete(data_original_df.values, class_index_original, axis=1))
            prediction_morph = classifier_morph.predict(np.delete(data_morph_df.values, class_index_morph, axis=1))
            <<<MORPHRELATION>>>

